<?xml version="1.0" encoding="UTF-8" standalone="no"?><model><assignment language="ConDec" name="Process model discovered out of test-Janus-vs-DMM-inconsistencies.xes"><activitydefinitions><activity id="65" name="a"/><activity id="66" name="b"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition/><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;0.250000;confidence;0.250000;IF;0.250000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;a&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;0.250000;confidence;0.250000;IF;0.250000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition/><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;a&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not "A".  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;a&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition/><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition/><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;a&lt;/b&gt; there has to be at least one &lt;b&gt;b&lt;/b&gt;.
and
2. &lt;b&gt;b&lt;/b&gt; has to be preceded by &lt;b&gt;a&lt;/b&gt;. &lt;b&gt;b&lt;/b&gt; can happen only after &lt;b&gt;a&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       );support;0.972222;confidence;0.972222;IF;0.972222</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition/><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) );support;0.222222;confidence;0.222222;IF;0.222222</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition/><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  );support;0.222222;confidence;0.222222;IF;0.222222</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="10" mandatory="true"><condition/><name>response</name><template><description>Whenever activity &lt;b&gt;a&lt;/b&gt; is executed, activity &lt;b&gt;b&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) );support;0.968750;confidence;0.968750;IF;0.968750</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &amp;quot;A&amp;quot; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &amp;quot;A&amp;quot; has been executed, and task &amp;quot;B&amp;quot; has been executed at least once after task &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &amp;quot;A&amp;quot; has been executed, 
and task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;p&gt;Execute task &amp;quot;B&amp;quot; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &amp;quot;A&amp;quot; was executed, 
but task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="11" mandatory="true"><condition/><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))));support;0.125000;confidence;0.125000;IF;0.125000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="12" mandatory="true"><condition/><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) );support;0.125000;confidence;0.125000;IF;0.125000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition/><name>not chain succession</name><template><description>A and be can never be executed next to each other where A if executed first and B second.</description><display>not chain succession</display><name>not chain succession</name><text>[]( ( "A" -&gt; X( !( "B" ) ) ) );support;0.777778;confidence;0.777778;IF;0.777778</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition/><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) );support;0.027778;confidence;0.027778;IF;0.027778</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="15" mandatory="true"><condition/><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;a&lt;/b&gt; or &lt;b&gt;b&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B));support;0.000000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="16" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;a&lt;/b&gt; has to be preceded by &lt;b&gt;b&lt;/b&gt;. &lt;b&gt;a&lt;/b&gt; can happen only after &lt;b&gt;b&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" );support;0.031250;confidence;0.031250;IF;0.031250</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="17" mandatory="true"><condition/><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;0.031250;confidence;0.031250;IF;0.031250</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="18" mandatory="true"><condition/><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" );support;0.031250;confidence;0.031250;IF;0.031250</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition/><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;b&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;0.750000;confidence;0.750000;IF;0.750000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="21" mandatory="true"><condition/><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;b&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" );support;0.000000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not "A".  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="22" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;b&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="23" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;b&lt;/b&gt; has to be preceded by &lt;b&gt;a&lt;/b&gt;. &lt;b&gt;b&lt;/b&gt; can happen only after &lt;b&gt;a&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="24" mandatory="true"><condition/><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="25" mandatory="true"><condition/><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="26" mandatory="true"><condition/><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition/><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;b&lt;/b&gt; there has to be at least one &lt;b&gt;a&lt;/b&gt;.
and
2. &lt;b&gt;a&lt;/b&gt; has to be preceded by &lt;b&gt;b&lt;/b&gt;. &lt;b&gt;a&lt;/b&gt; can happen only after &lt;b&gt;b&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       );support;0.055556;confidence;0.055556;IF;0.055556</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition/><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) );support;0.055556;confidence;0.055556;IF;0.055556</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="29" mandatory="true"><condition/><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  );support;0.055556;confidence;0.055556;IF;0.055556</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="30" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="31" mandatory="true"><condition/><name>response</name><template><description>Whenever activity &lt;b&gt;b&lt;/b&gt; is executed, activity &lt;b&gt;a&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) );support;0.250000;confidence;0.250000;IF;0.250000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &amp;quot;A&amp;quot; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &amp;quot;A&amp;quot; has been executed, and task &amp;quot;B&amp;quot; has been executed at least once after task &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &amp;quot;A&amp;quot; has been executed, 
and task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;p&gt;Execute task &amp;quot;B&amp;quot; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &amp;quot;A&amp;quot; was executed, 
but task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="32" mandatory="true"><condition/><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))));support;0.250000;confidence;0.250000;IF;0.250000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="33" mandatory="true"><condition/><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) );support;0.250000;confidence;0.250000;IF;0.250000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="34" mandatory="true"><condition/><name>not chain succession</name><template><description>A and be can never be executed next to each other where A if executed first and B second.</description><display>not chain succession</display><name>not chain succession</name><text>[]( ( "A" -&gt; X( !( "B" ) ) ) );support;0.944444;confidence;0.944444;IF;0.944444</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="35" mandatory="true"><condition/><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) );support;0.944444;confidence;0.944444;IF;0.944444</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition/><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;b&lt;/b&gt; or &lt;b&gt;a&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B));support;0.000000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="50.0" id="65" width="90.0" x="313.20836177833223" y="18.419862639480627"/><cell height="50.0" id="66" width="90.0" x="170.05993023485803" y="18.419862639480627"/></activities><constraints><cell height="1.0" id="5" width="1.0" x="459.0793358279419" y="39.68664597490532"/><cell height="1.0" id="6" width="1.0" x="525.2012115201726" y="167.30997075384948"/><cell height="1.0" id="7" width="1.0" x="414.381326181084" y="261.44089606550216"/><cell height="1.0" id="8" width="1.0" x="466.8543930418241" y="168.6326105771896"/><cell height="1.0" id="9" width="1.0" x="391.50266901480575" y="299.9213840753024"/><cell height="1.0" id="10" width="1.0" x="419.7305963026188" y="175.64193647257167"/><cell height="1.0" id="11" width="1.0" x="135.37712204176916" y="236.30573954844402"/><cell height="1.0" id="12" width="1.0" x="209.48381714224934" y="282.0612070742746"/><cell height="1.0" id="13" width="1.0" x="355.11804559282905" y="167.76861533165425"/><cell height="1.0" id="14" width="1.0" x="2.5000000000000036" y="51.18935847019221"/><cell height="1.0" id="15" width="1.0" x="84.69824728178719" y="115.13521836561581"/><cell height="1.0" id="16" width="1.0" x="133.81989492007318" y="295.80454996290143"/><cell height="1.0" id="17" width="1.0" x="154.10488652493842" y="2.4999999999999973"/><cell height="1.0" id="18" width="1.0" x="140.69190075976798" y="338.5380929463447"/><cell height="1.0" id="23" width="1.0" x="68.57006739170234" y="61.241074845725194"/><cell height="1.0" id="24" width="1.0" x="311.67138745816885" y="231.00777741692445"/><cell height="1.0" id="25" width="1.0" x="272.2714379674282" y="259.38571889029197"/><cell height="1.0" id="26" width="1.0" x="148.95993452651948" y="429.3054637110751"/><cell height="1.0" id="27" width="1.0" x="58.63927132369186" y="163.3272590781179"/><cell height="1.0" id="28" width="1.0" x="29.711708073590692" y="37.49089081241594"/><cell height="1.0" id="29" width="1.0" x="127.21236591457078" y="70.07592725680237"/><cell height="1.0" id="30" width="1.0" x="73.65211932300677" y="322.3264928368111"/><cell height="1.0" id="31" width="1.0" x="92.94077936951619" y="200.56588625196252"/><cell height="1.0" id="32" width="1.0" x="115.19201475395178" y="5.545122576752991"/><cell height="1.0" id="33" width="1.0" x="58.09842957372162" y="10.130523985633312"/><cell height="1.0" id="34" width="1.0" x="41.99641883805792" y="205.70302726477553"/><cell height="1.0" id="35" width="1.0" x="84.15944432789516" y="245.81259906519404"/><cell height="1.0" id="36" width="1.0" x="79.41245552139974" y="25.59865043323608"/></constraints></graphical></assignment></model>