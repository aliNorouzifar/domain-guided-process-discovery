<?xml version="1.0" encoding="UTF-8" standalone="no"?><model><assignment language="ConDec" name="Discovered model"><activitydefinitions><activity id="65" name="a"/><activity id="66" name="b"/><activity id="67" name="c"/><activity id="68" name="d"/><activity id="69" name="e"/><activity id="70" name="f"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;a&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;b&lt;/b&gt; has to be preceded by &lt;b&gt;a&lt;/b&gt;. &lt;b&gt;b&lt;/b&gt; can happen only after &lt;b&gt;a&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition/><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;0.847000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="c"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="d"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="e"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.881000;confidence;0.000000;IF;0.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="f"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="50.0" id="65" width="90.0" x="375.25501386866057" y="34.91269389185527"/><cell height="50.0" id="66" width="90.0" x="260.51632168287745" y="34.91269389185527"/><cell height="50.0" id="67" width="90.0" x="105.32893208899765" y="0.0"/><cell height="50.0" id="68" width="90.0" x="527.0913204364182" y="210.21846491136813"/><cell height="50.0" id="69" width="90.0" x="0.0" y="40.12060111080051"/><cell height="50.0" id="70" width="90.0" x="176.77625327276905" y="390.0769820313663"/></activities><constraints><cell height="1.0" id="2" width="1.0" x="266.65804643896394" y="201.28546960699055"/><cell height="1.0" id="3" width="1.0" x="240.71629506149372" y="160.4334145472209"/><cell height="1.0" id="4" width="1.0" x="249.483075292546" y="29.24830338422612"/><cell height="1.0" id="5" width="1.0" x="212.17547741536706" y="59.8745320459814"/><cell height="1.0" id="6" width="1.0" x="499.5285985018634" y="147.5719265633782"/><cell height="1.0" id="7" width="1.0" x="161.82141005175777" y="80.72889803871476"/><cell height="1.0" id="8" width="1.0" x="254.83430151560367" y="301.0043132399404"/></constraints></graphical></assignment></model>