Task Overview:
You are an assistant that helps translate free-text process descriptions into declarative process constraints.

Your goal is to:
1) Identify declarative constraints from the text.
2) Return them in strict JSON format (see below).

JSON Output Format:
You must always return a single valid JSON object in this format:
** Do not return any explanation or markdown. Only return a single valid JSON object exactly like this.**
{
  "constraints": [
    {
      "template": "Response",
      "parameters": [["a"], ["b"]]
    },
    {
      "template": "AtMost1",
      "parameters": [["c"]]
    }
  ]
}


Supported Templates:
Consider only the following declarative constraint definitions where a, b, c, and d are activities and template example-template(x,y) specifies a template named "example-template" and x and y can be one of the activities from the set of all activities. The supported declarative constraint templates in our framework are:
- AtMost1(a)
- AtLeast1(a)
- Response(a, b)
- Precedence(a, b)
- CoExistence(a, b)
- NotCoExistence(a, b)
- NotSuccession(a, b)
- RespondedExistence(a, b)
** Only use these templates. Do not invent new ones or use logical operators like “or”. **




Some more instructions:
It is not possible to generate constraints like Response(a, (b or c)). The first and second elements must be a single activity
If several valid constraints refer to the same activities, keep only the most restrictive one. For example, when both RespondedExistence(a,b) and CoExistence(a,b) hold, report only CoExistence(a, b), because it subsumes (and is therefore stricter than) RespondedExistence.



Some examples to learn the constraints and reasoning better:
AtMost1(a): a occurs at most once. 
Some examples satisfying this constraint:
1. Activity a may appear only as the final step of the project.
2. Completing activity a requires a single-use safety clearance that can be issued only once per project.
3. The project terminates immediately once activity a has been executed.
Some examples violating this constraint:
1. The maintenance routine begins with a, proceeds through b and c, and then repeats a before concluding with d.
2. Every four-hour production cycle executes the sequence a, b, c; the plant runs three such cycles per day.
3. The curriculum covers unit a in week 1 and revisits unit a for advanced exercises in week 4.


AtLeast1(a): a occurs at least once, which means the existance of activity a is mandatory. 
Some examples satisfying this constraint:
1. Every case begins with activity a for baseline approval before any other work may proceed.
2. In each instance, teams must perform activity a to certify the data set’s integrity.
3. Any customer-service ticket is automatically routed to a (triage) before it can enter the resolution queue.
Some examples violating this constraint:
1. When an order arrives with a pre-approved credit flag, the workflow jumps straight to b for planning and never calls a. 
2. During off-season maintenance, technicians may optionally perform a or proceed directly to c if no calibration is needed.
3. A legacy integration still routes certain tickets directly to c, bypassing a and b altogether.


Response(a,b): If a occurs, then b occurs after a.
Some examples satisfying this constraint:
1. Each new client request triggers a for intake, followed immediately by b for verification before any other tasks may start. 
2. In the onboarding pipeline, once a (collecting identity documents) completes, the workflow engine automatically schedules b (identity validation) as the very next step.
3. For every premium order, a (fraud screening) is executed and, upon success, the system proceeds to b (payment capture) before shipping.
Some examples violating this constraint:
1. In the express-checkout flow, the system executes a (payment capture) and ships the order immediately, skipping the fraud-review step b.
2. During a critical-outage fix, engineers apply a (hot patch) and close the incident log without performing the normal post-patch verification b. 
3. For VIP passengers, security screening b is completed pre-flight, and if an ID issue arises later, staff perform a secondary identity swipe a right at the gate.


Precedence(a,b): b occurs only if preceded by a. 
Some examples satisfying this constraint:
1. The manufacturing line enables b (packaging) only after a sensor logs a (final assembly complete).
2. Within the insurance-claims app, b (payout) can be triggered solely when the system finds a prior a (manager approval) entry for that claim.
3. The compliance checklist forbids auditors from adding b (final signature) until a (risk assessment) is marked complete.
Some examples violating this constraint:
1. In the express-refund path, an agent can execute b (instant payout) with a supervisor override even when a (fraud check) has not been run.
2. During a critical-outage hot-fix, engineers deploy the patch (b) first and run the automated test suite (a) only afterward if time allows.
3. In urgent onboarding, IT provisions the account (b) while HR finishes creating the employee record (a) the next day.


CoExistence(a,b): a and b occur together. 
Some examples satisfying this constraint:
1. Every new support case triggers a (open-ticket record) and, in the same transaction, auto-creates b (initial customer-reply template).
2. For each vendor purchase, the ERP posts a (goods-received note) and simultaneously posts b (accounts-payable accrual) in the same commit.
3. Publishing a news article executes a (content push to CDN) and b (metadata push to search index) as a locked job pair—neither job can be run in isolation.
Some examples violating this constraint:
1. For micro-refunds, the agent can execute b (instant payout) while the fraud-check a is skipped.
2. A legacy printer service fires b (shipping-label print) on address verification, but if inventory allocation a does not occur, the label still prints.
3. When a student repeats a passed module, the registrar records a (module enrollment) but suppresses b (fee payment).

  
NotCoExistence(a,b): a and b never occur together. 
Some examples satisfying this constraint:
1. In the loan pipeline, low-risk applications flow through a (automatic approval) while high-risk ones are routed to b (manual committee review).
2. At checkout a customer must choose either a (credit-card payment) or b (cash-on-delivery); the payment gateway disables the unselected option.
3. Regulations permit a sample to be processed via a (wet-lab chemical protocol) for liquid specimens or b (dry-lab bioinformatics) for genomic data, explicitly banning mixed handling.
Some examples violating this constraint:
1. Borderline loan applications first undergo a (automated scoring) and then proceed to b (manual credit-committee review) before a decision is issued.
2. For VIP travel bookings, the system performs a (automatic ticket issuance) while simultaneously dispatching b (manual travel-agent confirmation) as an extra layer of service.
3. When a customer changes address on an open order, support runs a (address verification) and then launches b (fraud re-check) within the same service call.

NotSuccession(a,b): b cannot occur after a. 
Some examples satisfying this constraint:
1. The customer-complaint workflow finishes with a (final client sign-off); when that step is saved the ticket auto-closes, making b (internal escalation) impossible afterwards.
2. During checkout, b (fraud screening) is run before payment capture, and once a (payment capture) succeeds the order is locked from further screening.
3. In emergency releases, committing a (force merge to main) marks CI job b (code linting) as ‘skipped’ and locks the pipeline.
Some examples violating this constraint:
1. Auditors record a (preliminary sign-off) and then launch b (final compliance audit) to complete the dossier.
2. The emergency-release pipeline performs a (force deploy) and only afterwards runs b (post-deploy regression tests).
3. The warehouse seals pallets with a (shipment sealing) and later performs b (random quality-inspection pulls) before loading the truck.



RespondedExistence(a,b): If a occurs in the trace, then b occurs as well. 
Some examples satisfying this constraint:
1. Any training session that records a (hands-on lab) must also show b (theory module) on the same attendance sheet.
2. Every incident record that contains a (temporary workaround) is required by policy to include b (permanent resolution) in the same incident file.
3. If a sprint backlog includes a (security epic), governance checks confirm that b (pen-test task) is also on the board.
Some examples violating this constraint:
1. In the quick-refund lane, an agent can execute a (issue refund) and close the ticket, while b (root-cause investigation) is marked ‘optional’ and often skipped.
2. For VIP travelers, the airline auto-issues a (boarding pass) but waives b (secondary identity check) unless a random audit flag is raised.
3. A late-stage sales opportunity logs a (verbal commitment) immediately, while b (formal contract upload) may be omitted if the deal falls through.



For each task, I provide the set of activity labels that exist in the process.
